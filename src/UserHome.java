/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author sanket
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.*;
import java.sql.*;


public class UserHome extends javax.swing.JFrame {

            static Font f1=new Font("Lora",Font.BOLD,15);
            static int Fine1;
    /**
     * Creates new form UserHome
     */
    public UserHome() {
        Fine1=0;
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        displaybook();
        checkFine();
            if(this.Fine1!=0){
                    JOptionPane.showMessageDialog(null, "You have Fines due.\nPay Fines to request more books.");
                }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setFocusCycleRoot(true);
        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        jTextField1.setToolTipText("Enter book name/author/genre");
        jPanel2.add(jTextField1);
        jTextField1.setBounds(10, 10, 610, 40);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(630, 10, 40, 40);

        jButton2.setBackground(new java.awt.Color(255, 153, 153));
        jButton2.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton2.setText("MyBooks");
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(820, 10, 94, 40);

        jButton3.setBackground(new java.awt.Color(255, 153, 153));
        jButton3.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton3.setText("My Requests");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(940, 10, 150, 40);

        jButton4.setBackground(new java.awt.Color(255, 153, 153));
        jButton4.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton4.setText("Fines");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(1120, 10, 90, 40);

        jButton5.setBackground(new java.awt.Color(255, 153, 153));
        jButton5.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton5.setText("Log Out");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setPreferredSize(new java.awt.Dimension(103, 40));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(1240, 10, 103, 40);

        jButton6.setBackground(new java.awt.Color(255, 153, 153));
        jButton6.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton6.setText("Home");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(690, 10, 100, 40);

        scroll.setBackground(new java.awt.Color(255, 153, 153));
        scroll.setOpaque(false);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookId", "Book Name", "Author", "Genre"
            }
        ));
        table.setFocusable(false);
        table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(232, 57, 95));
        table.setShowVerticalLines(false);
        table.getTableHeader().setReorderingAllowed(false);
        scroll.setViewportView(table);

        jPanel2.add(scroll);
        scroll.setBounds(28, 141, 1320, 540);

        jLabel1.setBackground(new java.awt.Color(255, 102, 102));
        jLabel1.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter Id of the book :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(40, 80, 240, 40);

        jTextField3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(jTextField3);
        jTextField3.setBounds(280, 80, 930, 40);

        jButton7.setBackground(new java.awt.Color(255, 102, 102));
        jButton7.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton7.setText("Request");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);
        jButton7.setBounds(1230, 80, 111, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sample.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 40, 1390, 1040);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void checkFine(){
        SqlCon s=new SqlCon();
            String bookId;
            String bname;
            String ISBN;
            String return_date;
            int Days;
            int Fine = 0;
            try
            { 
            s.sqlcon();
            String sql = "select book_id,bname,ISBN,issue_date,return_date from user_book,books where book_id=bookId and username=\'"+login.userText+"\'";
           // String sql1="select datediff((select return_date from user_book where ISBN=1),(select issue_date from user_book where ISBN=1))";
            PreparedStatement ps = s.con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
            bookId = rs.getString("book_id");
            bname = rs.getString("bname");
            ISBN = rs.getString("ISBN");
            return_date = rs.getString("return_date");
              String sql1="select datediff((select return_date from user_book where ISBN="+ISBN+" and book_id=\'"+bookId+"\'),(select curdate())) as days";
            ResultSet rs1=(s.con.prepareStatement(sql1)).executeQuery();
            if(rs1.next()){
            Days=Integer.parseInt(rs1.getString("days"));
            if(Days<0){
                Fine=20;
                this.Fine1+=20;
            }
            else{
                Fine=0;
            }
            }
            }
            }
            catch(Exception ex)
            {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
            JOptionPane.ERROR_MESSAGE);
            }
}
public void displaybook(){
String[] columnNames={"BookId","Book name","Author","Publisher","Genre"};
                DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(columnNames);
            table.setModel(model); 
            table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            table.setFillsViewportHeight(true);
            //scroll=new JScrollPane(table);
            scroll.setHorizontalScrollBarPolicy(
            JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            scroll.setVerticalScrollBarPolicy(
            JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            String bookId;
            String bname;
            String author;
            String genre;
            String Publisher;
            try{
            SqlCon s1=new SqlCon();
                s1.sqlcon();
                s1.displaybook();
            while(s1.rs.next())
            {
            bookId = s1.rs.getString("bookId");
            bname = s1.rs.getString("bname");
            author = s1.rs.getString("author");
            Publisher=s1.rs.getString("Publisher");
            genre = s1.rs.getString("genre");
            table.setFont(f1);
            model.addRow(new Object[]{bookId, bname, author,Publisher ,genre});
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error",
                JOptionPane.ERROR_MESSAGE);
             }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       SqlCon s1=new SqlCon();
    String[] columnNames={"BookId","Book name","Author","Genre"};
    String search=jTextField1.getText();
                DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(columnNames);
            //DefaultTableModel model = new DefaultTableModel(tm.getData1(), tm.getColumnNames()); 
            //table = new JTable(model);
            table.setModel(model); 
            table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            table.setFillsViewportHeight(true);
            //scroll=new JScrollPane(table);
            scroll.setHorizontalScrollBarPolicy(
            JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            scroll.setVerticalScrollBarPolicy(
            JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            String bookId;
            String bname;
            String author;
            String genre;
            try
            { 
            s1.sqlcon();
            String sql = "select * from books where author like '%"+search+"%'"+" or bname like '%"+search+"%'"+" or genre like '%"+search+"%'";
            PreparedStatement ps = s1.con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
            bookId = rs.getString("bookId");
            bname = rs.getString("bname");
            author = rs.getString("author");
            genre = rs.getString("genre");
            table.setFont(f1);
            model.addRow(new Object[]{bookId, bname, author, genre});
            }
            }
            catch(Exception ex)
            {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
            JOptionPane.ERROR_MESSAGE);
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        login h1=new login();
        h1.u1.setVisible(false);
        h1.setTitle("Library Management System");
        h1.setVisible(true);
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
             displaybook();
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                    String[] columnNames={"BookId","Book name","ISBN","return date","Return in Days"};
DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(columnNames);
            table.setModel(model); 
            table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            table.setFillsViewportHeight(true);
            //scroll=new JScrollPane(table);
            scroll.setHorizontalScrollBarPolicy(
            JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            scroll.setVerticalScrollBarPolicy(
            JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            SqlCon s=new SqlCon();
            String bookId;
            String bname;
            String ISBN;
            String return_date;
            String Days = null;
            try
            { 
            s.sqlcon();
            String sql = "select book_id,bname,ISBN,issue_date,return_date from User_book,books where book_id=bookId and username=\'"+login.userText+"\'";
           // String sql = "select book_id,bname,ISBN,issue_date,return_date from User_book,books where book_id=bookId and username='ayushrajpro@gmail.com'";
           // String sql1="select datediff((select return_date from user_book where ISBN=1),(select issue_date from user_book where ISBN=1))";
            PreparedStatement ps = s.con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
            bookId = rs.getString("book_id");
            bname = rs.getString("bname");
            ISBN = rs.getString("ISBN");
            return_date = rs.getString("return_date");
              String sql1="select datediff((select return_date from User_book where ISBN="+ISBN+" and book_id=\'"+bookId+"\'),(select curdate())) as days";
            ResultSet rs1=(s.con.prepareStatement(sql1)).executeQuery();
            if(rs1.next()){
            Days=rs1.getString("days");
               if((Integer.parseInt(Days)<0)){
                     Days="You have passed due.";
                }
                 
            }
            table.setFont(f1);
            model.addRow(new Object[]{bookId, bname, ISBN, return_date,Days});
            }
            }
            catch(Exception ex)
            {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
            JOptionPane.ERROR_MESSAGE);
            }// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                    String[] columnNames={"BookId","Book name","ISBN","return date","Fines(in Rs)"};
DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(columnNames);
            table.setModel(model); 
            table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            table.setFillsViewportHeight(true);
            //scroll=new JScrollPane(table);
            scroll.setHorizontalScrollBarPolicy(
            JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            scroll.setVerticalScrollBarPolicy(
            JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            SqlCon s=new SqlCon();
            String bookId;
            String bname;
            String ISBN;
            String return_date;
            int Days;
            int Fine = 0;
            try
            { 
            s.sqlcon();
            String sql = "select book_id,bname,ISBN,issue_date,return_date from User_book,books where book_id=bookId and username=\'"+login.userText+"\'";
           // String sql1="select datediff((select return_date from user_book where ISBN=1),(select issue_date from user_book where ISBN=1))";
            PreparedStatement ps = s.con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
            bookId = rs.getString("book_id");
            bname = rs.getString("bname");
            ISBN = rs.getString("ISBN");
            return_date = rs.getString("return_date");
              String sql1="select datediff((select return_date from User_book where ISBN="+ISBN+" and book_id=\'"+bookId+"\'),(select curdate())) as days";
            ResultSet rs1=(s.con.prepareStatement(sql1)).executeQuery();
            if(rs1.next()){
            Days=Integer.parseInt(rs1.getString("days"));
            if(Days<0){
                Fine=20;
                this.Fine1+=20;
            }
            else{
                Fine=0;
            }
            }
            table.setFont(f1);
            model.addRow(new Object[]{bookId, bname, ISBN, return_date,Fine});
            }
            }
            catch(Exception ex)
            {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
            JOptionPane.ERROR_MESSAGE);
            } // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                if(this.Fine1!=0){
                    JOptionPane.showMessageDialog(null, "You have Fines due.\nPay Fines to request more books.");
                }
                else{
                    String[] columnNames={"BookId","Book name","Author","Publisher","Genre","Status"};
                    DefaultTableModel model = new DefaultTableModel();
                    model.setColumnIdentifiers(columnNames);
                    table.setModel(model); 
                    table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                    table.setFillsViewportHeight(true);
                    scroll.setHorizontalScrollBarPolicy(
                    JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
                    scroll.setVerticalScrollBarPolicy(
                    JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
                    String bookId;
            String bname;
            String author;
            String genre;
            String status;
            String Publisher;
            SqlCon s1=new SqlCon();
            try
            { 
            s1.sqlcon();
           String sql = "select book_id,bname,author,Publisher,genre,status from book_request,books where book_id=bookId and username=\'"+login.userText+"\'";
           PreparedStatement ps = s1.con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
            bookId = rs.getString("book_id");
            bname = rs.getString("bname");
            author = rs.getString("author");
            Publisher=rs.getString("Publisher");
            genre = rs.getString("genre");
            status=rs.getString("status");
            table.setFont(f1);
            model.addRow(new Object[]{bookId, bname, author, Publisher,genre,status});
            }
            }
            catch(Exception ex)
            {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
            JOptionPane.ERROR_MESSAGE);
            }
                }  
      // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
            String sqlCount="select count(username)from book_request where username='"+login.userText+"'";     
            if(this.Fine1!=0){
                    JOptionPane.showMessageDialog(null, "You have Fines due.\nPay Fines to request more books.");
                }
            else{
                    String Status="Pending";
                    SqlCon s1= new SqlCon();
                    String bookid=jTextField3.getText();
                    String sql1="select bookId from books where bookId in('"+bookid+"')";
                    String sql2="select book_id from book_request where username='"+login.userText+"' and book_id in ('"+bookid+"')";
                    try{
                        s1.sqlcon();
                        ResultSet rs1=s1.con.prepareStatement(sql1).executeQuery();
                        ResultSet rs2=s1.con.prepareStatement(sql2).executeQuery();
                            if((rs1.next())){
                               if(!(rs2.next())){
                                         String sql = "insert into book_request values('"+login.userText+"','"+bookid+"','"+Status+"')";
                                            PreparedStatement ps = s1.con.prepareStatement(sql);
                                            ps.executeUpdate();
                                            JOptionPane.showMessageDialog(null, "Book added to your Requests.");
                                }
                                else{
                                    JOptionPane.showMessageDialog(null,"You already requested this book.");
                                }
                            }
                            else{
                                 JOptionPane.showMessageDialog(null,"Book doesn\'t exist library.\nPlease Enter valid Book Id.");
                            }
                    }
                    catch(Exception ex)
                    {
                    JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
                    JOptionPane.ERROR_MESSAGE);
            }
                }   // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

         Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserHome h1=new UserHome();
                h1.setVisible(true);
                h1.setBackground(Color.black);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private static javax.swing.JScrollPane scroll;
    private static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
